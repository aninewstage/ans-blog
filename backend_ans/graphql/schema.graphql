"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
        "Search by primary key."
        id: ID @eq

        username: String @where(operator: "like")

        "Search by email address."
        email: String @eq
    ): User @find

    "List multiple users."
    users(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        name: String @where(operator: "like")
        role: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    post(slug: String @where(operator: "like")): Post @find(model: "Blog\\Post")

    postResolver(slug: String @where(operator: "like")): Post
        @field(resolver: "App\\GraphQL\\Queries\\PostResolver")

    postsResolver(search: String!): [Post!]!
        @paginate(builder: "App\\GraphQL\\Queries\\PostsResolver")

    posts(
        orderBy: _ @orderBy(columns: ["created_at", "updated_at"])
        category_id: ID @where(operator: "like")
        random: Boolean @scope(name: "random")
    ): [Post!]! @paginate(defaultCount: 9, model: "Blog\\Post")

    categories(
        parent_id: ID @where(operator: "like")
        name: String @where(operator: "like")
        slug: String @where(operator: "like")
    ): [Category!]! @paginate(defaultCount: 9, model: "Blog\\Category")

    category(
        slug: String @where(operator: "like")
        parent_id: ID @where(operator: "like")
    ): [Category!]! @all(model: "Blog\\Category")
}

type Category {
    id: ID!

    parent_id: ID!

    sub_categories: [Category!]! @hasMany(type: "paginator")

    parent_category: Category @belongsTo

    posts: [Post!]! @hasMany(type: "paginator")

    name: String!

    slug: String!

    created_at: DateTime!

    updated_at: DateTime!
}

type Info {
    user: User @belongsTo

    avatar: String!

    name: String!

    ph_number: Int!

    bio: String!

    rating: Int!

    facebook: String!

    twitter: String!

    telegram: String!

    created_at: DateTime!

    updated_at: DateTime!
}

type Post {
    id: ID

    category: Category @belongsTo

    author: User @belongsTo

    title: String!

    slug: String!

    tags: String!

    poster: String!

    body: String!

    views: String

    created_at: DateTime!

    updated_at: DateTime!
}
"Account of a person who utilizes this application."
type User {
    info: Info @hasOne

    posts: [Post!]! @hasMany(type: "paginator")

    "Unique primary key."
    id: ID!

    "Non-unique name."
    username: String!

    "Unique email address."
    email: String!

    "role"
    role: String!

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}
